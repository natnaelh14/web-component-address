{"version":3,"file":"address-card.js","sourceRoot":"","sources":["../../../src/components/address-card/address-card.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAOzE,MAAM,OAAO,MAAM;;IAIjB,gBAAW,GAAG,GAAG,EAAE;MACjB,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;MAC3B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;IAC7D,CAAC,CAAC;uBAN8B,IAAI;;EAQpC,MAAM;IACJ,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE;MACxB,IAAI,CAAC,CAAC,aAAa,CAAC,KAAK,KAAK,WAAW,EAAE;QACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;OACzB;WAAM;QACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;OAC1B;IACH,CAAC,CAAC;IAEF,OAAO,CACL,YAAM,KAAK,EAAC,qBAAqB;MAC/B,WAAK,KAAK,EAAC,yEAAyE;QAClF,WAAK,GAAG,EAAC,+EAA+E,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,GAAI;QACpH,SAAG,KAAK,EAAC,0BAA0B;;UACd,YAAM,KAAK,EAAC,gBAAgB,4BAA6B,CAC1E;QACJ,WAAK,KAAK,EAAC,KAAK;UACd,aAAO,OAAO,EAAC,gBAAgB,EAAC,KAAK,EAAC,mDAAmD,8DAEjF;UACR,WAAK,KAAK,EAAC,kCAAkC;YAC3C,aACE,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,gBAAgB,EACrB,EAAE,EAAC,gBAAgB,EACnB,YAAY,EAAC,gBAAgB,EAC7B,KAAK,EAAC,+MAA+M,GACrN;YACF,cAAQ,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,KAAK,EAAC,2EAA2E,aAE3G,CACL;UACN,WAAK,KAAK,EAAC,gCAAgC;YACzC,WAAK,KAAK,EAAC,gDAAgD;cACzD,aAAO,OAAO,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,WAAW,EAAC,KAAK,EAAC,WAAW,EAAC,EAAE,EAAC,gBAAgB,EAAC,QAAQ,EAAE,aAAa,GAAI;cACjI,aAAO,KAAK,EAAC,sDAAsD,EAAC,OAAO,EAAC,gBAAgB,gBAEpF,CACJ;YACN,WAAK,KAAK,EAAC,gDAAgD;cACzD,aAAO,OAAO,EAAE,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAC,OAAO,EAAC,IAAI,EAAC,aAAa,EAAC,KAAK,EAAC,aAAa,EAAC,EAAE,EAAC,gBAAgB,EAAC,QAAQ,EAAE,aAAa,GAAI;cACtI,aAAO,KAAK,EAAC,sDAAsD,EAAC,OAAO,EAAC,gBAAgB,kBAEpF,CACJ,CACF,CACF,CACF,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, State, Event, EventEmitter } from '@stencil/core';\n\n@Component({\n  tag: 'address-card',\n  styleUrl: 'address-card.css',\n  shadow: false,\n})\nexport class MyCard {\n  @State() isAvailable: boolean = true;\n  @Event() myCustomEvent: EventEmitter;\n\n  handleClick = () => {\n    console.log('handleClick');\n    this.myCustomEvent.emit({ isAvailable: this.isAvailable });\n  };\n\n  render() {\n    const addressChange = e => {\n      if (e.currentTarget.value === 'available') {\n        this.isAvailable = true;\n      } else {\n        this.isAvailable = false;\n      }\n    };\n\n    return (\n      <main class=\"flex justify-center\">\n        <div class=\"flex flex-col items-center justify-center w-[600px] shadow-2xl m-10 p-4\">\n          <img src=\"https://res.cloudinary.com/doalzf6o2/image/upload/v1678421121/logo_hozn4t.png\" height={100} width={100} />\n          <p class=\"text-center text-3xl p-6\">\n            America&apos;s #50 <span class=\"font-extrabold\">Meal Delivery Service</span>\n          </p>\n          <div class=\"p-6\">\n            <label htmlFor=\"street-address\" class=\"block text-sm font-medium leading-6 text-gray-900\">\n              Check if delivery service is available at your location\n            </label>\n            <div class=\"flex flex-row gap-4 items-center\">\n              <input\n                type=\"text\"\n                name=\"street-address\"\n                id=\"street-address\"\n                autocomplete=\"street-address\"\n                class=\"w-[400px] mt-2 block rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n              <button onClick={this.handleClick} class=\"px-8 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 rounded-full\">\n                Search\n              </button>\n            </div>\n            <div class=\"flex justify-center gap-6 mt-4\">\n              <div class=\"mb-[0.125rem] block min-h-[1.5rem] pl-[1.5rem]\">\n                <input checked={this.isAvailable} type=\"radio\" name=\"available\" value=\"available\" id=\"radioDefault01\" onChange={addressChange} />\n                <label class=\"mt-px inline-block pl-[0.15rem] hover:cursor-pointer\" htmlFor=\"radioDefault01\">\n                  Available\n                </label>\n              </div>\n              <div class=\"mb-[0.125rem] block min-h-[1.5rem] pl-[1.5rem]\">\n                <input checked={!this.isAvailable} type=\"radio\" name=\"unavailable\" value=\"unavailable\" id=\"radioDefault02\" onChange={addressChange} />\n                <label class=\"mt-px inline-block pl-[0.15rem] hover:cursor-pointer\" htmlFor=\"radioDefault02\">\n                  Unavailable\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n"]}